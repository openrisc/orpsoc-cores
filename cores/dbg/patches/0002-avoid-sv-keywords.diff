Index: dbg/rtl/verilog/dbg_wb.v
===================================================================
--- dbg.orig/rtl/verilog/dbg_wb.v
+++ dbg/rtl/verilog/dbg_wb.v
@@ -223,7 +223,7 @@ reg           start_wb_wr_q;
 reg           status_cnt_en;
 wire          status_cnt_end;
 
-wire          byte, half, long;
+wire          byte_w, half, long;
 reg           byte_q, half_q, long_q;
 
 reg [`DBG_WB_STATUS_CNT_WIDTH -1:0] status_cnt;
@@ -296,7 +296,7 @@ begin
     ptr <=  2'h0;
   else if (curr_cmd_go && acc_type_read && crc_cnt_31) // first latch
     ptr <=  ptr + 1'b1;
-  else if (curr_cmd_go && acc_type_read && byte && (!byte_q))
+  else if (curr_cmd_go && acc_type_read && byte_w && (!byte_q))
     ptr <= ptr + 1'd1;
 end
                                                                                            
@@ -328,7 +328,7 @@ begin
     begin
       if (acc_type == `DBG_WB_READ8)
         begin
-          if(byte & (~byte_q))
+          if(byte_w & (~byte_q))
             begin
               case (ptr)    // synthesis parallel_case
                 2'b00 : dr[31:24] <=  input_data[31:24];
@@ -648,7 +648,7 @@ assign len_eq_0 = !(|len_var);
 
 
 
-assign byte = data_cnt[2:0] == 3'd7;
+assign byte_w = data_cnt[2:0] == 3'd7;
 assign half = data_cnt[3:0] == 4'd15;
 assign long = data_cnt[4:0] == 5'd31;
 
@@ -663,7 +663,7 @@ begin
     end
   else
     begin
-      byte_q <=  byte;
+      byte_q <=  byte_w;
       half_q <=  half;
       long_q <=  long;
     end
