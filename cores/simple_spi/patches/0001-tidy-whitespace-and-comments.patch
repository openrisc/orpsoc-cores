From 01d88c914200e6136b747c5f0c2cbb691a74c5ce Mon Sep 17 00:00:00 2001
From: Hans Baier <hansfbaier@googlemail.com>
Date: Thu, 17 Oct 2013 12:15:48 +0700
Subject: [PATCH 1/6] tidy whitespace and comments

---
 fifo4.v          |   56 +++++++++++++++++++++++++++---------------------------
 simple_spi_top.v |    6 +++---
 2 files changed, 31 insertions(+), 31 deletions(-)

diff --git a/fifo4.v b/fifo4.v
index 540aa5a..da1002d 100644
--- a/fifo4.v
+++ b/fifo4.v
@@ -60,13 +60,13 @@ module fifo4(clk, rst, clr,  din, we, dout, re, full, empty);
 
 parameter dw = 8;
 
-input		clk, rst;
-input		clr;
-input   [dw:1]	din;
-input		we;
-output  [dw:1]	dout;
-input		re;
-output		full, empty;
+input             clk, rst;
+input             clr;
+input   [dw:1]    din;
+input             we;
+output  [dw:1]    dout;
+input             re;
+output            full, empty;
 
 
 ////////////////////////////////////////////////////////////////////
@@ -74,14 +74,14 @@ output		full, empty;
 // Local Wires
 //
 
-reg     [dw:1]	mem[0:3];
+reg     [dw:1]  mem[0:3];
 reg     [1:0]   wp;
 reg     [1:0]   rp;
 wire    [1:0]   wp_p1;
 wire    [1:0]   wp_p2;
 wire    [1:0]   rp_p1;
-wire		full, empty;
-reg		gb;
+wire            full, empty;
+reg             gb;
 
 ////////////////////////////////////////////////////////////////////
 //
@@ -89,21 +89,21 @@ reg		gb;
 //
 
 always @(posedge clk or negedge rst)
-        if(!rst)	wp <= #1 2'h0;
-        else
-        if(clr)		wp <= #1 2'h0;
-        else
-        if(we)		wp <= #1 wp_p1;
+    if(!rst)    wp <= #1 2'h0;
+    else
+    if(clr)     wp <= #1 2'h0;
+    else
+    if(we)      wp <= #1 wp_p1;
 
 assign wp_p1 = wp + 2'h1;
 assign wp_p2 = wp + 2'h2;
 
 always @(posedge clk or negedge rst)
-        if(!rst)	rp <= #1 2'h0;
-        else
-        if(clr)		rp <= #1 2'h0;
-        else
-        if(re)		rp <= #1 rp_p1;
+    if(!rst)    rp <= #1 2'h0;
+    else
+    if(clr)     rp <= #1 2'h0;
+    else
+    if(re)      rp <= #1 rp_p1;
 
 assign rp_p1 = rp + 2'h1;
 
@@ -112,7 +112,7 @@ assign  dout = mem[ rp ];
 
 // Fifo Input
 always @(posedge clk)
-        if(we)	mem[ wp ] <= #1 din;
+    if(we)    mem[ wp ] <= #1  din;
 
 // Status
 assign empty = (wp == rp) & !gb;
@@ -120,12 +120,12 @@ assign full  = (wp == rp) &  gb;
 
 // Guard Bit ...
 always @(posedge clk)
-	if(!rst)			gb <= #1 1'b0;
-	else
-	if(clr)				gb <= #1 1'b0;
-	else
-	if((wp_p1 == rp) & we)		gb <= #1 1'b1;
-	else
-	if(re)				gb <= #1 1'b0;
+    if(!rst)               gb <= #1 1'b0;
+    else
+    if(clr)                gb <= #1 1'b0;
+    else
+    if((wp_p1 == rp) & we) gb <= #1 1'b1;
+    else
+    if(re)                 gb <= #1 1'b0;
 
 endmodule
diff --git a/simple_spi_top.v b/simple_spi_top.v
index 1fb4d89..6e60cd1 100644
--- a/simple_spi_top.v
+++ b/simple_spi_top.v
@@ -92,9 +92,9 @@ module simple_spi_top(
   //
   // Module body
   //
-  reg  [7:0] spcr;       // Serial Peripheral Control Register ('HC11 naming)
-  wire [7:0] spsr;       // Serial Peripheral Status register ('HC11 naming)
-  reg  [7:0] sper;       // Serial Peripheral Extension register
+  reg  [7:0]          spcr;       // Serial Peripheral Control   Register ('HC11 naming)
+  wire [7:0]          spsr;       // Serial Peripheral Status    Register ('HC11 naming)
+  reg  [7:0]          sper;       // Serial Peripheral Extension Register
   reg  [7:0] treg, rreg; // Transmit/Receive register
 
   // fifo signals
-- 
1.7.9.5

