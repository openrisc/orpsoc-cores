From 7ca743f9e06059af14d2e5e850f0fa303fab1bcc Mon Sep 17 00:00:00 2001
From: Hans Baier <hansfbaier@googlemail.com>
Date: Thu, 17 Oct 2013 14:08:09 +0700
Subject: [PATCH 4/6] make reset logic synchronous active high as wishbone

---
 simple_spi_top.v |   20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/simple_spi_top.v b/simple_spi_top.v
index 6541e10..0acfe4d 100644
--- a/simple_spi_top.v
+++ b/simple_spi_top.v
@@ -73,7 +73,7 @@
 module simple_spi_top(
   // 8bit WISHBONE bus slave interface
   input  wire       clk_i,         // clock
-  input  wire       rst_i,         // reset (asynchronous active low)
+  input  wire       rst_i,         // reset (synchronous active high)
   input  wire       cyc_i,         // cycle
   input  wire       stb_i,         // strobe
   input  wire [1:0] adr_i,         // address
@@ -116,8 +116,8 @@ module simple_spi_top(
   wire wb_wr  = wb_acc & we_i;       // WISHBONE write access
 
   // dat_i
-  always @(posedge clk_i or negedge rst_i)
-    if (~rst_i)
+  always @(posedge clk_i)
+    if (rst_i)
       begin
           spcr <= 8'h10;  // set master bit
           sper <= 8'h00;
@@ -148,8 +148,8 @@ module simple_spi_top(
   assign rfre = wb_acc & (adr_i == 2'b10) & ack_o & ~we_i;
 
   // ack_o
-  always @(posedge clk_i or negedge rst_i)
-    if (~rst_i)
+  always @(posedge clk_i)
+    if (rst_i)
       ack_o <= 1'b0;
     else
       ack_o <= wb_acc & !ack_o;
@@ -174,14 +174,14 @@ module simple_spi_top(
 
   reg spif;
   always @(posedge clk_i)
-    if (~spe)
+    if (~spe | rst_i)
       spif <= 1'b0;
     else
       spif <= (tirq | spif) & ~(wr_spsr & dat_i[7]);
 
   reg wcol;
   always @(posedge clk_i)
-    if (~spe)
+    if (~spe | rst_i)
       wcol <= 1'b0;
     else
       wcol <= (wfov | wcol) & ~(wr_spsr & dat_i[6]);
@@ -204,7 +204,7 @@ module simple_spi_top(
   fifo4 #(8)
   rfifo(
 	.clk   ( clk_i   ),
-	.rst   ( rst_i   ),
+	.rst   ( ~rst_i  ),
 	.clr   ( ~spe    ),
 	.din   ( treg    ),
 	.we    ( rfwe    ),
@@ -215,7 +215,7 @@ module simple_spi_top(
   ),
   wfifo(
 	.clk   ( clk_i   ),
-	.rst   ( rst_i   ),
+	.rst   ( ~rst_i  ),
 	.clr   ( ~spe    ),
 	.din   ( dat_i   ),
 	.we    ( wfwe    ),
@@ -252,7 +252,7 @@ module simple_spi_top(
 
   // transfer statemachine
   always @(posedge clk_i)
-    if (~spe)
+    if (~spe | rst_i)
       begin
           state <= 2'b00; // idle
           bcnt  <= 3'h0;
-- 
1.7.9.5

